{
	"filename": "can.custom.js",
	"banner": "/*!\n * <%= pkg.title || pkg.name %> - <%= pkg.version %>\n * <%= pkg.homepage %>\n * Copyright (c) <%= new Date().getFullYear() %> <%= pkg.author.name %>\n * <%= new Date().toUTCString() %>\n * Licensed <%= pkg.licenses[0].type %><% if(typeof url !== \"undefined\") { %>\n * Includes: <%= ids %>\n * Download from: <%= url %>\n<% } %> */\n",
	"modules": {
		"can/component/component": {
			"name": "can.Component",
			"description": "Custom elements and widgets",
			"type": "core",
			"isDefault": true
		},
		"can/construct/construct": {
			"name": "can.Construct",
			"description": "Inheritable constructor functions",
			"type": "core",
			"isDefault": true
		},
		"can/map/map": {
			"name": "can.Map",
			"description": "Observables and key-value bindings",
			"type": "core",
			"isDefault": true
		},
		"can/list/list": {
			"name": "can.List",
			"description": "Observables lists",
			"type": "core",
			"isDefault": true
		},
		"can/list/promise/promise": {
			"name": "can.List.promise",
			"description": "Promises on lists",
			"type": "plugin"
		},
		"can/observe/observe": {
			"name": "can.Observe",
			"description": "Observables and key-value bindings",
			"type": "core",
			"isDefault": true,
			"hidden": true
		},
		"can/compute/compute": {
			"name": "can.compute",
			"description": "can.compute lets you make observable values",
			"type": "core",
			"isDefault": true
		},
		"can/model/model": {
			"name": "can.Model",
			"description": "Observes connected to a RESTful JSON interface",
			"type": "core",
			"isDefault": true
		},
		"can/view/view": {
			"name": "can.view",
			"description": "Template loading, caching, rendering",
			"type": "core",
			"isDefault": true
		},
		"can/view/ejs/ejs": {
			"name": "can.ejs",
			"description": "Live-binding Embedded JavaScript",
			"type": "plugin"
		},
		"can/view/stache/stache": {
			"name": "can.stache",
			"description": "High performance Mustache templates",
			"type": "plugin"
		},
		"can/control/control": {
			"name": "can.Control",
			"description": "Declarative event bindings",
			"type": "core",
			"isDefault": true
		},
		"can/route/route": {
			"name": "can.route",
			"description": "Back button and bookmarking support",
			"type": "core",
			"isDefault": true
		},
		"can/control/route/route": {
			"name": "can.Control.route",
			"description": "Declare routes in your Control",
			"type": "core",
			"isDefault": true
		},
		"can/view/mustache/mustache": {
			"name": "can.mustache",
			"description": "Live-binding Handlebars and Mustache views",
			"type": "core",
			"isDefault": true
		},
		"can/route/pushstate/pushstate": {
			"name": "can.route.pushstate",
			"description": "can.route with pushstate",
			"type": "plugin"
		},
		"can/model/queue/queue": {
			"name": "can.Model.Queue",
			"type": "plugin",
			"description": "Queued requests to the server."
		},
		"can/construct/super/super": {
			"name": "can.Construct.super",
			"type": "plugin",
			"description": "Call super methods"
		},
		"can/construct/proxy/proxy": {
			"name": "can.Construct.proxy",
			"type": "plugin",
			"description": "Proxy construct methods"
		},
		"can/map/lazy/lazy": {
			"name": "can.Map.Lazy",
			"type": "plugin",
			"description": "Lazy initializing maps and lists"
		},
		"can/map/delegate/delegate": {
			"name": "can.Map.delegate",
			"type": "plugin",
			"description": "Listen to Observe attributes"
		},
		"can/map/setter/setter": {
			"name": "can.Map.setter",
			"type": "plugin",
			"description": "Use setter methods on can.Map"
		},
		"can/map/attributes/attributes": {
			"name": "can.Map.attributes",
			"type": "plugin",
			"deprecated": true,
			"description": "Define Observe attributes"
		},
		"can/map/validations/validations": {
			"name": "can.Map.validations",
			"type": "plugin",
			"description": "Validate Observe attributes"
		},
		"can/map/backup/backup": {
			"name": "can.Map.backup",
			"type": "plugin",
			"description": "Backup and restore an Observes state"
		},
		"can/map/list/list": {
			"name": "can.Map.List",
			"type": "plugin",
			"description": "Live-updating mapped and filtered observe lists"
		},
		"can/map/define/define": {
			"name": "can.Map.define",
			"type": "plugin",
			"description": "Define rich attribute behavior"
		},
		"can/map/sort/sort": {
			"name": "can.List.Sort",
			"type": "plugin",
			"description": "Sort observable lists"
		},
		"can/control/plugin/plugin": {
			"name": "can.Control.plugin",
			"type": "plugin",
			"description": "Registers a jQuery plugin function for Controls",
			"configurations": ["jquery", "jquery-2"]
		},
		"can/view/modifiers/modifiers": {
			"name": "can.view.modifiers",
			"type": "plugin",
			"description": "Use jQuery modifiers to render views",
			"configurations": ["jquery", "jquery-2"]
		},
		"can/util/object/object": {
			"name": "can.Object",
			"type": "plugin",
			"description": "Helper methods for object comparison"
		},
		"can/util/fixture/fixture": {
			"name": "can.fixture",
			"type": "plugin",
			"description": "Intercepts an AJAX request and simulates the response with a file or function"
		},
		"can/view/bindings/bindings": {
			"name": "can.view.bindings",
			"type": "core",
			"isDefault": true,
			"hidden": true
		},
		"can/view/live/live": {
			"name": "can.view.live",
			"type": "core",
			"isDefault": true,
			"hidden": true
		},
		"can/view/scope/scope": {
			"name": "can.view.Scope",
			"type": "core",
			"isDefault": true,
			"hidden": true
		},
		"can/util/string/string": {
			"name": "can.util.string",
			"type": "core",
			"isDefault": true,
			"hidden": true
		},
		"can/util/attr/attr": {
			"name": "can.util.attr",
			"type": "core",
			"isDefault": true,
			"hidden": true
		},
		"can/view/stache/system": {
			"name": "can.view.stache.system",
			"type": "loader",
			"type": "plugin",
			"hidden": true,
			"hasTest": false
		},
		"can/util/domless/domless": {
			"name": "can.util.domless",
			"type": "plugin",
			"hidden": true,
			"hasTest": false
		}
	},
	"types": {
		"core": "CanJS core",
		"plugin": "Plugins"
	},
	"pluginify": {
		"shim": {
			"can/lib/jquery.2.0.3.js": "jQuery",
			"can/lib/jquery.1.10.2.js": "jQuery",
			"can/bower_components/zepto/zepto.js": "Zepto",
			"can/lib/mootools-core-1.4.5.js": "{}",
			"can/util/dojo/dojo-1.8.1.js": "{}",
			"can/lib/yui-3.7.3.js": "YUI"
		},
		"exports": {
			"can/util/can.js": "can"
		}
	},
	"ignore": ["dojo","dojo/dojo","dojo/main",
		"jquery","jquery/jquery",
		"mootools/mootools","mootools",
		"zepto","zepto/zepto",
		"yui","yui/yui"],
	"exports": {
		"jquery": "jQuery",
		"zepto": "Zepto"
	},
	"configurations": {
		"jquery": {
			"description": "jQuery",
			"isDefault": true,
			"library": "lib/jquery.1.10.2.js",
			"steal": {
				"map": {
					"jquery/jquery": "jquery"
				},
				"paths": {
					"can/util/util": "util/jquery/jquery.js",
					"jquery": "lib/jquery.1.10.2.js"
				},
				"meta": {
					"jquery": {
						"format": "global"
					}
				}
			}
		},
		"jquery-2": {
			"description": "jQuery (2.x)",
			"hidden": true,
			"library": "lib/jquery.2.0.3.js",
			"steal": {
				"map": {
					"jquery/jquery": "can/lib/jquery.2.0.3"
				},
				"paths": {
					"can/util/util": "util/jquery/jquery.js"
				},
				"meta": {
					"can/lib/jquery.2.0.3": {
						"format": "global"
					}
				}
			}
		},
		"zepto": {
			"description": "Zepto",
			"library": "bower_components/zepto/zepto.js",
			"steal": {
				"paths": {
					"can/*": "*.js",
					"can/util/util": "util/zepto/zepto.js",
					"zepto/zepto": "bower_components/zepto/zepto.js"
				}
			}
		},
		"mootools": {
			"description": "Mootools",
			"library": "lib/mootools-core-1.4.5.js",
			"steal": {
				"paths": {
					"can/*": "*.js",
					"can/util/util": "util/mootools/mootools.js",
					"mootools/mootools": "lib/mootools-core-1.4.5.js"
				}
			}
		},
		"yui": {
			"description": "YUI",
			"library": "lib/yui-3.7.3.js",
			"steal": {
				"paths": {
					"can/*": "*.js",
					"can/util/util": "util/yui/yui.js",
					"yui/yui": "lib/yui-3.7.3.js"
				}
			},
			"pluginifyOptions": {
				"exports": {
					"yui/yui": "YUI"
				}
			}
		},
		"dojo": {
			"description": "Dojo",
			"library": "util/dojo/dojo-1.8.1.js",
			"steal": {
				"paths": {
					"can/*": "*.js",
					"can/util/util": "util/dojo/dojo.js",
					"dojo/dojo": "util/dojo/dojo-1.8.1.js"
				},
				"meta": {
					"dojo/dojo": {
						"format": "global"
					}
				}
			},
			"pluginifyOptions": {
				"exports": {
					"dojo/dojo": "dojo"
				}
			}
		}
	}
}
